version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - my-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: Srikrishna@1234
      MYSQL_DATABASE: user_management
    ports:
      - "3308:3306"  # Host port 3308 mapped to container port 3306
    volumes:
    - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - my-network

  userservice:
    build: ./userservice  # Assuming you have a Dockerfile in the userservice directory
    container_name: userservice
    depends_on:
      - kafka
      - mysql
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/user_management
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Srikrishna@1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - my-network

  journalservice:
    build: ./journalservice  # Assuming you have a Dockerfile in the journalservice directory
    container_name: journalservice
    depends_on:
      - kafka
      - mysql
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/user_management
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Srikrishna@1234
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
